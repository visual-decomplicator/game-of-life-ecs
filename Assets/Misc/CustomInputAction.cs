//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/Misc/CustomInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/Misc/CustomInputAction.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @CustomInputAction: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @CustomInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CustomInputAction"",
    ""maps"": [
        {
            ""name"": ""Game"",
            ""id"": ""fa1bb92f-47a7-4087-9b1a-6ca3ae40388d"",
            ""actions"": [
                {
                    ""name"": ""NextStep"",
                    ""type"": ""Button"",
                    ""id"": ""3ccac691-c0b2-4176-93fb-43637c880eb2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseSteps"",
                    ""type"": ""Button"",
                    ""id"": ""6e32fc8f-d399-4555-9d3b-1b52a5582f85"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddCell"",
                    ""type"": ""Value"",
                    ""id"": ""f1c5cfe8-b79c-4d96-b072-f93eea3aa91b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraAutoFit"",
                    ""type"": ""Button"",
                    ""id"": ""9c4d2086-02a1-4e51-9554-d9ac1489a291"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraManualMovement"",
                    ""type"": ""Value"",
                    ""id"": ""68438f16-d436-46f3-9b45-6ace25ffeb6a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraManualZoom"",
                    ""type"": ""Value"",
                    ""id"": ""e72e4c3b-f229-455f-8f18-b7e9e657eee8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d16ec602-727c-405f-b731-cc7eec391b83"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextStep"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""dfb9e9c4-f121-4974-9b87-b8794920ce1a"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddCell"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""981ecd20-5428-4e58-b911-45e4e1ed7ff8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddCell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""dc13a80b-ab9b-4060-86d3-fe4d6a06f80f"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddCell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b1b1aebe-80a5-4c5c-9fbc-03d054d87f02"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseSteps"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04b8b17b-d81a-4099-a5fd-c671e16d9e70"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraAutoFit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""0b9d8bb0-5cfa-45a3-bdca-be248d6dd262"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""321d1902-2560-476b-b1ed-387eb7ae829d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4e02d5d6-f5d1-4d8f-827b-4afe9d8fef8d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8817712a-47a0-4377-a404-4d5fce7d1529"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""81e9a893-2c94-4e95-a6f0-1e1ffcda71ce"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PlusMinus"",
                    ""id"": ""89e4580b-fdd9-4b0c-8488-c8d363609540"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualZoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2aa55443-a8b8-460b-ab04-158953fb243c"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4d3f9843-f168-4af8-b505-c5cbbf115c1b"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6744412c-b60a-46d9-83c9-1a09afcb4d45"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5c8eb39c-1e0b-4290-9ee8-f7c890ccbb3c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraManualZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_NextStep = m_Game.FindAction("NextStep", throwIfNotFound: true);
        m_Game_PauseSteps = m_Game.FindAction("PauseSteps", throwIfNotFound: true);
        m_Game_AddCell = m_Game.FindAction("AddCell", throwIfNotFound: true);
        m_Game_CameraAutoFit = m_Game.FindAction("CameraAutoFit", throwIfNotFound: true);
        m_Game_CameraManualMovement = m_Game.FindAction("CameraManualMovement", throwIfNotFound: true);
        m_Game_CameraManualZoom = m_Game.FindAction("CameraManualZoom", throwIfNotFound: true);
    }

    ~@CustomInputAction()
    {
        UnityEngine.Debug.Assert(!m_Game.enabled, "This will cause a leak and performance issues, CustomInputAction.Game.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game
    private readonly InputActionMap m_Game;
    private List<IGameActions> m_GameActionsCallbackInterfaces = new List<IGameActions>();
    private readonly InputAction m_Game_NextStep;
    private readonly InputAction m_Game_PauseSteps;
    private readonly InputAction m_Game_AddCell;
    private readonly InputAction m_Game_CameraAutoFit;
    private readonly InputAction m_Game_CameraManualMovement;
    private readonly InputAction m_Game_CameraManualZoom;
    /// <summary>
    /// Provides access to input actions defined in input action map "Game".
    /// </summary>
    public struct GameActions
    {
        private @CustomInputAction m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public GameActions(@CustomInputAction wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Game/NextStep".
        /// </summary>
        public InputAction @NextStep => m_Wrapper.m_Game_NextStep;
        /// <summary>
        /// Provides access to the underlying input action "Game/PauseSteps".
        /// </summary>
        public InputAction @PauseSteps => m_Wrapper.m_Game_PauseSteps;
        /// <summary>
        /// Provides access to the underlying input action "Game/AddCell".
        /// </summary>
        public InputAction @AddCell => m_Wrapper.m_Game_AddCell;
        /// <summary>
        /// Provides access to the underlying input action "Game/CameraAutoFit".
        /// </summary>
        public InputAction @CameraAutoFit => m_Wrapper.m_Game_CameraAutoFit;
        /// <summary>
        /// Provides access to the underlying input action "Game/CameraManualMovement".
        /// </summary>
        public InputAction @CameraManualMovement => m_Wrapper.m_Game_CameraManualMovement;
        /// <summary>
        /// Provides access to the underlying input action "Game/CameraManualZoom".
        /// </summary>
        public InputAction @CameraManualZoom => m_Wrapper.m_Game_CameraManualZoom;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="GameActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="GameActions" />
        public void AddCallbacks(IGameActions instance)
        {
            if (instance == null || m_Wrapper.m_GameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameActionsCallbackInterfaces.Add(instance);
            @NextStep.started += instance.OnNextStep;
            @NextStep.performed += instance.OnNextStep;
            @NextStep.canceled += instance.OnNextStep;
            @PauseSteps.started += instance.OnPauseSteps;
            @PauseSteps.performed += instance.OnPauseSteps;
            @PauseSteps.canceled += instance.OnPauseSteps;
            @AddCell.started += instance.OnAddCell;
            @AddCell.performed += instance.OnAddCell;
            @AddCell.canceled += instance.OnAddCell;
            @CameraAutoFit.started += instance.OnCameraAutoFit;
            @CameraAutoFit.performed += instance.OnCameraAutoFit;
            @CameraAutoFit.canceled += instance.OnCameraAutoFit;
            @CameraManualMovement.started += instance.OnCameraManualMovement;
            @CameraManualMovement.performed += instance.OnCameraManualMovement;
            @CameraManualMovement.canceled += instance.OnCameraManualMovement;
            @CameraManualZoom.started += instance.OnCameraManualZoom;
            @CameraManualZoom.performed += instance.OnCameraManualZoom;
            @CameraManualZoom.canceled += instance.OnCameraManualZoom;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="GameActions" />
        private void UnregisterCallbacks(IGameActions instance)
        {
            @NextStep.started -= instance.OnNextStep;
            @NextStep.performed -= instance.OnNextStep;
            @NextStep.canceled -= instance.OnNextStep;
            @PauseSteps.started -= instance.OnPauseSteps;
            @PauseSteps.performed -= instance.OnPauseSteps;
            @PauseSteps.canceled -= instance.OnPauseSteps;
            @AddCell.started -= instance.OnAddCell;
            @AddCell.performed -= instance.OnAddCell;
            @AddCell.canceled -= instance.OnAddCell;
            @CameraAutoFit.started -= instance.OnCameraAutoFit;
            @CameraAutoFit.performed -= instance.OnCameraAutoFit;
            @CameraAutoFit.canceled -= instance.OnCameraAutoFit;
            @CameraManualMovement.started -= instance.OnCameraManualMovement;
            @CameraManualMovement.performed -= instance.OnCameraManualMovement;
            @CameraManualMovement.canceled -= instance.OnCameraManualMovement;
            @CameraManualZoom.started -= instance.OnCameraManualZoom;
            @CameraManualZoom.performed -= instance.OnCameraManualZoom;
            @CameraManualZoom.canceled -= instance.OnCameraManualZoom;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="GameActions.UnregisterCallbacks(IGameActions)" />.
        /// </summary>
        /// <seealso cref="GameActions.UnregisterCallbacks(IGameActions)" />
        public void RemoveCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="GameActions.AddCallbacks(IGameActions)" />
        /// <seealso cref="GameActions.RemoveCallbacks(IGameActions)" />
        /// <seealso cref="GameActions.UnregisterCallbacks(IGameActions)" />
        public void SetCallbacks(IGameActions instance)
        {
            foreach (var item in m_Wrapper.m_GameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="GameActions" /> instance referencing this action map.
    /// </summary>
    public GameActions @Game => new GameActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Game" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="GameActions.AddCallbacks(IGameActions)" />
    /// <seealso cref="GameActions.RemoveCallbacks(IGameActions)" />
    public interface IGameActions
    {
        /// <summary>
        /// Method invoked when associated input action "NextStep" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnNextStep(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "PauseSteps" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPauseSteps(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "AddCell" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAddCell(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CameraAutoFit" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraAutoFit(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CameraManualMovement" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraManualMovement(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "CameraManualZoom" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraManualZoom(InputAction.CallbackContext context);
    }
}
